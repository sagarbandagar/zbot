# CI/CD Pipeline for ZBot Application
name: ZBot CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  FRONTEND_IMAGE: sagarbandagar/zbot-frontend
  BACKEND_IMAGE: sagarbandagar/zbot-backend

jobs:
  # Frontend Build and Deploy
  frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push frontend
      uses: docker/build-push-action@v4
      with:
        context: ./front-end
        push: true
        tags: |
          ${{ env.FRONTEND_IMAGE }}:latest
          ${{ env.FRONTEND_IMAGE }}:${{ github.sha }}

  # Backend Build and Deploy  
  backend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push backend
      uses: docker/build-push-action@v4
      with:
        context: ./back-end
        push: true
        tags: |
          ${{ env.BACKEND_IMAGE }}:latest
          ${{ env.BACKEND_IMAGE }}:${{ github.sha }}

  # Local Kubernetes Deployment (Self-hosted runner)
  deploy:
    needs: [frontend, backend]
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to Local Kubernetes
      run: |
        echo "ðŸš€ Deploying to local Kubernetes cluster..."
        
        # Apply secrets first
        kubectl apply -f k8s/secrets.yaml
        
        # Apply all Kubernetes manifests
        kubectl apply -f k8s/
        
        # Update deployments with new image tags
        kubectl set image deployment/zbot-frontend frontend=${{ env.FRONTEND_IMAGE }}:${{ github.sha }} -n zbot
        kubectl set image deployment/zbot-backend backend=${{ env.BACKEND_IMAGE }}:${{ github.sha }} -n zbot
        
        # Wait for rollout to complete
        kubectl rollout status deployment/zbot-frontend -n zbot --timeout=300s
        kubectl rollout status deployment/zbot-backend -n zbot --timeout=300s
        
        # Show deployment status
        echo "ðŸ“Š Deployment Status:"
        kubectl get pods -n zbot
        kubectl get svc -n zbot
        
        echo "âœ… Deployment completed successfully!"